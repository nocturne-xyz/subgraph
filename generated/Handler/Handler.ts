// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ContractMethodPermissionSet extends ethereum.Event {
  get params(): ContractMethodPermissionSet__Params {
    return new ContractMethodPermissionSet__Params(this);
  }
}

export class ContractMethodPermissionSet__Params {
  _event: ContractMethodPermissionSet;

  constructor(event: ContractMethodPermissionSet) {
    this._event = event;
  }

  get contractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get selector(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get permission(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class ContractPermissionSet extends ethereum.Event {
  get params(): ContractPermissionSet__Params {
    return new ContractPermissionSet__Params(this);
  }
}

export class ContractPermissionSet__Params {
  _event: ContractPermissionSet;

  constructor(event: ContractPermissionSet) {
    this._event = event;
  }

  get contractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get permission(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class FilledBatchWithZeros extends ethereum.Event {
  get params(): FilledBatchWithZeros__Params {
    return new FilledBatchWithZeros__Params(this);
  }
}

export class FilledBatchWithZeros__Params {
  _event: FilledBatchWithZeros;

  constructor(event: FilledBatchWithZeros) {
    this._event = event;
  }

  get startIndex(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get numZeros(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class JoinSplitProcessed extends ethereum.Event {
  get params(): JoinSplitProcessed__Params {
    return new JoinSplitProcessed__Params(this);
  }
}

export class JoinSplitProcessed__Params {
  _event: JoinSplitProcessed;

  constructor(event: JoinSplitProcessed) {
    this._event = event;
  }

  get oldNoteANullifier(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get oldNoteBNullifier(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newNoteAIndex(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get newNoteBIndex(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get newNoteACommitment(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get newNoteBCommitment(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get senderCommitment(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get newNoteAEncrypted(): JoinSplitProcessedNewNoteAEncryptedStruct {
    return changetype<JoinSplitProcessedNewNoteAEncryptedStruct>(
      this._event.parameters[7].value.toTuple()
    );
  }

  get newNoteBEncrypted(): JoinSplitProcessedNewNoteBEncryptedStruct {
    return changetype<JoinSplitProcessedNewNoteBEncryptedStruct>(
      this._event.parameters[8].value.toTuple()
    );
  }
}

export class JoinSplitProcessedNewNoteAEncryptedStruct extends ethereum.Tuple {
  get ciphertextBytes(): Bytes {
    return this[0].toBytes();
  }

  get encapsulatedSecretBytes(): Bytes {
    return this[1].toBytes();
  }
}

export class JoinSplitProcessedNewNoteBEncryptedStruct extends ethereum.Tuple {
  get ciphertextBytes(): Bytes {
    return this[0].toBytes();
  }

  get encapsulatedSecretBytes(): Bytes {
    return this[1].toBytes();
  }
}

export class OwnershipTransferStarted extends ethereum.Event {
  get params(): OwnershipTransferStarted__Params {
    return new OwnershipTransferStarted__Params(this);
  }
}

export class OwnershipTransferStarted__Params {
  _event: OwnershipTransferStarted;

  constructor(event: OwnershipTransferStarted) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RefundProcessed extends ethereum.Event {
  get params(): RefundProcessed__Params {
    return new RefundProcessed__Params(this);
  }
}

export class RefundProcessed__Params {
  _event: RefundProcessed;

  constructor(event: RefundProcessed) {
    this._event = event;
  }

  get refundAddr(): RefundProcessedRefundAddrStruct {
    return changetype<RefundProcessedRefundAddrStruct>(
      this._event.parameters[0].value.toTuple()
    );
  }

  get encodedAssetAddr(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get encodedAssetId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get value(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get merkleIndex(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get refundType(): i32 {
    return this._event.parameters[5].value.toI32();
  }
}

export class RefundProcessedRefundAddrStruct extends ethereum.Tuple {
  get h1(): BigInt {
    return this[0].toBigInt();
  }

  get h2(): BigInt {
    return this[1].toBigInt();
  }
}

export class SubtreeBatchFillerPermissionSet extends ethereum.Event {
  get params(): SubtreeBatchFillerPermissionSet__Params {
    return new SubtreeBatchFillerPermissionSet__Params(this);
  }
}

export class SubtreeBatchFillerPermissionSet__Params {
  _event: SubtreeBatchFillerPermissionSet;

  constructor(event: SubtreeBatchFillerPermissionSet) {
    this._event = event;
  }

  get filler(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get permission(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class SubtreeUpdate extends ethereum.Event {
  get params(): SubtreeUpdate__Params {
    return new SubtreeUpdate__Params(this);
  }
}

export class SubtreeUpdate__Params {
  _event: SubtreeUpdate;

  constructor(event: SubtreeUpdate) {
    this._event = event;
  }

  get newRoot(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get subtreeBatchOffset(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Handler__executeActionsResult {
  value0: Array<boolean>;
  value1: Array<Bytes>;
  value2: BigInt;

  constructor(value0: Array<boolean>, value1: Array<Bytes>, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBooleanArray(this.value0));
    map.set("value1", ethereum.Value.fromBytesArray(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getSuccesses(): Array<boolean> {
    return this.value0;
  }

  getResults(): Array<Bytes> {
    return this.value1;
  }

  getNumRefundsToHandle(): BigInt {
    return this.value2;
  }
}

export class Handler__executeActionsInputOpStruct extends ethereum.Tuple {
  get pubJoinSplits(): Array<
    Handler__executeActionsInputOpPubJoinSplitsStruct
  > {
    return this[0].toTupleArray<
      Handler__executeActionsInputOpPubJoinSplitsStruct
    >();
  }

  get confJoinSplits(): Array<
    Handler__executeActionsInputOpConfJoinSplitsStruct
  > {
    return this[1].toTupleArray<
      Handler__executeActionsInputOpConfJoinSplitsStruct
    >();
  }

  get refundAddr(): Handler__executeActionsInputOpRefundAddrStruct {
    return changetype<Handler__executeActionsInputOpRefundAddrStruct>(
      this[2].toTuple()
    );
  }

  get trackedAssets(): Array<
    Handler__executeActionsInputOpTrackedAssetsStruct
  > {
    return this[3].toTupleArray<
      Handler__executeActionsInputOpTrackedAssetsStruct
    >();
  }

  get actions(): Array<Handler__executeActionsInputOpActionsStruct> {
    return this[4].toTupleArray<Handler__executeActionsInputOpActionsStruct>();
  }

  get encodedGasAsset(): Handler__executeActionsInputOpEncodedGasAssetStruct {
    return changetype<Handler__executeActionsInputOpEncodedGasAssetStruct>(
      this[5].toTuple()
    );
  }

  get gasAssetRefundThreshold(): BigInt {
    return this[6].toBigInt();
  }

  get executionGasLimit(): BigInt {
    return this[7].toBigInt();
  }

  get gasPrice(): BigInt {
    return this[8].toBigInt();
  }

  get deadline(): BigInt {
    return this[9].toBigInt();
  }

  get atomicActions(): boolean {
    return this[10].toBoolean();
  }
}

export class Handler__executeActionsInputOpPubJoinSplitsStruct extends ethereum.Tuple {
  get joinSplit(): Handler__executeActionsInputOpPubJoinSplitsJoinSplitStruct {
    return changetype<
      Handler__executeActionsInputOpPubJoinSplitsJoinSplitStruct
    >(this[0].toTuple());
  }

  get assetIndex(): i32 {
    return this[1].toI32();
  }

  get publicSpend(): BigInt {
    return this[2].toBigInt();
  }
}

export class Handler__executeActionsInputOpPubJoinSplitsJoinSplitStruct extends ethereum.Tuple {
  get commitmentTreeRoot(): BigInt {
    return this[0].toBigInt();
  }

  get nullifierA(): BigInt {
    return this[1].toBigInt();
  }

  get nullifierB(): BigInt {
    return this[2].toBigInt();
  }

  get newNoteACommitment(): BigInt {
    return this[3].toBigInt();
  }

  get newNoteBCommitment(): BigInt {
    return this[4].toBigInt();
  }

  get senderCommitment(): BigInt {
    return this[5].toBigInt();
  }

  get proof(): Array<BigInt> {
    return this[6].toBigIntArray();
  }

  get newNoteAEncrypted(): Handler__executeActionsInputOpPubJoinSplitsJoinSplitNewNoteAEncryptedStruct {
    return changetype<
      Handler__executeActionsInputOpPubJoinSplitsJoinSplitNewNoteAEncryptedStruct
    >(this[7].toTuple());
  }

  get newNoteBEncrypted(): Handler__executeActionsInputOpPubJoinSplitsJoinSplitNewNoteBEncryptedStruct {
    return changetype<
      Handler__executeActionsInputOpPubJoinSplitsJoinSplitNewNoteBEncryptedStruct
    >(this[8].toTuple());
  }
}

export class Handler__executeActionsInputOpPubJoinSplitsJoinSplitNewNoteAEncryptedStruct extends ethereum.Tuple {
  get ciphertextBytes(): Bytes {
    return this[0].toBytes();
  }

  get encapsulatedSecretBytes(): Bytes {
    return this[1].toBytes();
  }
}

export class Handler__executeActionsInputOpPubJoinSplitsJoinSplitNewNoteBEncryptedStruct extends ethereum.Tuple {
  get ciphertextBytes(): Bytes {
    return this[0].toBytes();
  }

  get encapsulatedSecretBytes(): Bytes {
    return this[1].toBytes();
  }
}

export class Handler__executeActionsInputOpConfJoinSplitsStruct extends ethereum.Tuple {
  get commitmentTreeRoot(): BigInt {
    return this[0].toBigInt();
  }

  get nullifierA(): BigInt {
    return this[1].toBigInt();
  }

  get nullifierB(): BigInt {
    return this[2].toBigInt();
  }

  get newNoteACommitment(): BigInt {
    return this[3].toBigInt();
  }

  get newNoteBCommitment(): BigInt {
    return this[4].toBigInt();
  }

  get senderCommitment(): BigInt {
    return this[5].toBigInt();
  }

  get proof(): Array<BigInt> {
    return this[6].toBigIntArray();
  }

  get newNoteAEncrypted(): Handler__executeActionsInputOpConfJoinSplitsNewNoteAEncryptedStruct {
    return changetype<
      Handler__executeActionsInputOpConfJoinSplitsNewNoteAEncryptedStruct
    >(this[7].toTuple());
  }

  get newNoteBEncrypted(): Handler__executeActionsInputOpConfJoinSplitsNewNoteBEncryptedStruct {
    return changetype<
      Handler__executeActionsInputOpConfJoinSplitsNewNoteBEncryptedStruct
    >(this[8].toTuple());
  }
}

export class Handler__executeActionsInputOpConfJoinSplitsNewNoteAEncryptedStruct extends ethereum.Tuple {
  get ciphertextBytes(): Bytes {
    return this[0].toBytes();
  }

  get encapsulatedSecretBytes(): Bytes {
    return this[1].toBytes();
  }
}

export class Handler__executeActionsInputOpConfJoinSplitsNewNoteBEncryptedStruct extends ethereum.Tuple {
  get ciphertextBytes(): Bytes {
    return this[0].toBytes();
  }

  get encapsulatedSecretBytes(): Bytes {
    return this[1].toBytes();
  }
}

export class Handler__executeActionsInputOpRefundAddrStruct extends ethereum.Tuple {
  get h1(): BigInt {
    return this[0].toBigInt();
  }

  get h2(): BigInt {
    return this[1].toBigInt();
  }
}

export class Handler__executeActionsInputOpTrackedAssetsStruct extends ethereum.Tuple {
  get encodedAsset(): Handler__executeActionsInputOpTrackedAssetsEncodedAssetStruct {
    return changetype<
      Handler__executeActionsInputOpTrackedAssetsEncodedAssetStruct
    >(this[0].toTuple());
  }

  get minRefundValue(): BigInt {
    return this[1].toBigInt();
  }
}

export class Handler__executeActionsInputOpTrackedAssetsEncodedAssetStruct extends ethereum.Tuple {
  get encodedAssetAddr(): BigInt {
    return this[0].toBigInt();
  }

  get encodedAssetId(): BigInt {
    return this[1].toBigInt();
  }
}

export class Handler__executeActionsInputOpActionsStruct extends ethereum.Tuple {
  get contractAddress(): Address {
    return this[0].toAddress();
  }

  get encodedFunction(): Bytes {
    return this[1].toBytes();
  }
}

export class Handler__executeActionsInputOpEncodedGasAssetStruct extends ethereum.Tuple {
  get encodedAssetAddr(): BigInt {
    return this[0].toBigInt();
  }

  get encodedAssetId(): BigInt {
    return this[1].toBigInt();
  }
}

export class Handler__handleDepositInputDepositStruct extends ethereum.Tuple {
  get spender(): Address {
    return this[0].toAddress();
  }

  get encodedAsset(): Handler__handleDepositInputDepositEncodedAssetStruct {
    return changetype<Handler__handleDepositInputDepositEncodedAssetStruct>(
      this[1].toTuple()
    );
  }

  get value(): BigInt {
    return this[2].toBigInt();
  }

  get depositAddr(): Handler__handleDepositInputDepositDepositAddrStruct {
    return changetype<Handler__handleDepositInputDepositDepositAddrStruct>(
      this[3].toTuple()
    );
  }
}

export class Handler__handleDepositInputDepositEncodedAssetStruct extends ethereum.Tuple {
  get encodedAssetAddr(): BigInt {
    return this[0].toBigInt();
  }

  get encodedAssetId(): BigInt {
    return this[1].toBigInt();
  }
}

export class Handler__handleDepositInputDepositDepositAddrStruct extends ethereum.Tuple {
  get h1(): BigInt {
    return this[0].toBigInt();
  }

  get h2(): BigInt {
    return this[1].toBigInt();
  }
}

export class Handler__handleOperationResultOpResultStruct extends ethereum.Tuple {
  get opProcessed(): boolean {
    return this[0].toBoolean();
  }

  get assetsUnwrapped(): boolean {
    return this[1].toBoolean();
  }

  get failureReason(): string {
    return this[2].toString();
  }

  get callSuccesses(): Array<boolean> {
    return this[3].toBooleanArray();
  }

  get callResults(): Array<Bytes> {
    return this[4].toBytesArray();
  }

  get verificationGas(): BigInt {
    return this[5].toBigInt();
  }

  get executionGas(): BigInt {
    return this[6].toBigInt();
  }

  get numRefunds(): BigInt {
    return this[7].toBigInt();
  }

  get preOpMerkleCount(): BigInt {
    return this[8].toBigInt();
  }

  get postOpMerkleCount(): BigInt {
    return this[9].toBigInt();
  }
}

export class Handler__handleOperationInputOpStruct extends ethereum.Tuple {
  get pubJoinSplits(): Array<
    Handler__handleOperationInputOpPubJoinSplitsStruct
  > {
    return this[0].toTupleArray<
      Handler__handleOperationInputOpPubJoinSplitsStruct
    >();
  }

  get confJoinSplits(): Array<
    Handler__handleOperationInputOpConfJoinSplitsStruct
  > {
    return this[1].toTupleArray<
      Handler__handleOperationInputOpConfJoinSplitsStruct
    >();
  }

  get refundAddr(): Handler__handleOperationInputOpRefundAddrStruct {
    return changetype<Handler__handleOperationInputOpRefundAddrStruct>(
      this[2].toTuple()
    );
  }

  get trackedAssets(): Array<
    Handler__handleOperationInputOpTrackedAssetsStruct
  > {
    return this[3].toTupleArray<
      Handler__handleOperationInputOpTrackedAssetsStruct
    >();
  }

  get actions(): Array<Handler__handleOperationInputOpActionsStruct> {
    return this[4].toTupleArray<Handler__handleOperationInputOpActionsStruct>();
  }

  get encodedGasAsset(): Handler__handleOperationInputOpEncodedGasAssetStruct {
    return changetype<Handler__handleOperationInputOpEncodedGasAssetStruct>(
      this[5].toTuple()
    );
  }

  get gasAssetRefundThreshold(): BigInt {
    return this[6].toBigInt();
  }

  get executionGasLimit(): BigInt {
    return this[7].toBigInt();
  }

  get gasPrice(): BigInt {
    return this[8].toBigInt();
  }

  get deadline(): BigInt {
    return this[9].toBigInt();
  }

  get atomicActions(): boolean {
    return this[10].toBoolean();
  }
}

export class Handler__handleOperationInputOpPubJoinSplitsStruct extends ethereum.Tuple {
  get joinSplit(): Handler__handleOperationInputOpPubJoinSplitsJoinSplitStruct {
    return changetype<
      Handler__handleOperationInputOpPubJoinSplitsJoinSplitStruct
    >(this[0].toTuple());
  }

  get assetIndex(): i32 {
    return this[1].toI32();
  }

  get publicSpend(): BigInt {
    return this[2].toBigInt();
  }
}

export class Handler__handleOperationInputOpPubJoinSplitsJoinSplitStruct extends ethereum.Tuple {
  get commitmentTreeRoot(): BigInt {
    return this[0].toBigInt();
  }

  get nullifierA(): BigInt {
    return this[1].toBigInt();
  }

  get nullifierB(): BigInt {
    return this[2].toBigInt();
  }

  get newNoteACommitment(): BigInt {
    return this[3].toBigInt();
  }

  get newNoteBCommitment(): BigInt {
    return this[4].toBigInt();
  }

  get senderCommitment(): BigInt {
    return this[5].toBigInt();
  }

  get proof(): Array<BigInt> {
    return this[6].toBigIntArray();
  }

  get newNoteAEncrypted(): Handler__handleOperationInputOpPubJoinSplitsJoinSplitNewNoteAEncryptedStruct {
    return changetype<
      Handler__handleOperationInputOpPubJoinSplitsJoinSplitNewNoteAEncryptedStruct
    >(this[7].toTuple());
  }

  get newNoteBEncrypted(): Handler__handleOperationInputOpPubJoinSplitsJoinSplitNewNoteBEncryptedStruct {
    return changetype<
      Handler__handleOperationInputOpPubJoinSplitsJoinSplitNewNoteBEncryptedStruct
    >(this[8].toTuple());
  }
}

export class Handler__handleOperationInputOpPubJoinSplitsJoinSplitNewNoteAEncryptedStruct extends ethereum.Tuple {
  get ciphertextBytes(): Bytes {
    return this[0].toBytes();
  }

  get encapsulatedSecretBytes(): Bytes {
    return this[1].toBytes();
  }
}

export class Handler__handleOperationInputOpPubJoinSplitsJoinSplitNewNoteBEncryptedStruct extends ethereum.Tuple {
  get ciphertextBytes(): Bytes {
    return this[0].toBytes();
  }

  get encapsulatedSecretBytes(): Bytes {
    return this[1].toBytes();
  }
}

export class Handler__handleOperationInputOpConfJoinSplitsStruct extends ethereum.Tuple {
  get commitmentTreeRoot(): BigInt {
    return this[0].toBigInt();
  }

  get nullifierA(): BigInt {
    return this[1].toBigInt();
  }

  get nullifierB(): BigInt {
    return this[2].toBigInt();
  }

  get newNoteACommitment(): BigInt {
    return this[3].toBigInt();
  }

  get newNoteBCommitment(): BigInt {
    return this[4].toBigInt();
  }

  get senderCommitment(): BigInt {
    return this[5].toBigInt();
  }

  get proof(): Array<BigInt> {
    return this[6].toBigIntArray();
  }

  get newNoteAEncrypted(): Handler__handleOperationInputOpConfJoinSplitsNewNoteAEncryptedStruct {
    return changetype<
      Handler__handleOperationInputOpConfJoinSplitsNewNoteAEncryptedStruct
    >(this[7].toTuple());
  }

  get newNoteBEncrypted(): Handler__handleOperationInputOpConfJoinSplitsNewNoteBEncryptedStruct {
    return changetype<
      Handler__handleOperationInputOpConfJoinSplitsNewNoteBEncryptedStruct
    >(this[8].toTuple());
  }
}

export class Handler__handleOperationInputOpConfJoinSplitsNewNoteAEncryptedStruct extends ethereum.Tuple {
  get ciphertextBytes(): Bytes {
    return this[0].toBytes();
  }

  get encapsulatedSecretBytes(): Bytes {
    return this[1].toBytes();
  }
}

export class Handler__handleOperationInputOpConfJoinSplitsNewNoteBEncryptedStruct extends ethereum.Tuple {
  get ciphertextBytes(): Bytes {
    return this[0].toBytes();
  }

  get encapsulatedSecretBytes(): Bytes {
    return this[1].toBytes();
  }
}

export class Handler__handleOperationInputOpRefundAddrStruct extends ethereum.Tuple {
  get h1(): BigInt {
    return this[0].toBigInt();
  }

  get h2(): BigInt {
    return this[1].toBigInt();
  }
}

export class Handler__handleOperationInputOpTrackedAssetsStruct extends ethereum.Tuple {
  get encodedAsset(): Handler__handleOperationInputOpTrackedAssetsEncodedAssetStruct {
    return changetype<
      Handler__handleOperationInputOpTrackedAssetsEncodedAssetStruct
    >(this[0].toTuple());
  }

  get minRefundValue(): BigInt {
    return this[1].toBigInt();
  }
}

export class Handler__handleOperationInputOpTrackedAssetsEncodedAssetStruct extends ethereum.Tuple {
  get encodedAssetAddr(): BigInt {
    return this[0].toBigInt();
  }

  get encodedAssetId(): BigInt {
    return this[1].toBigInt();
  }
}

export class Handler__handleOperationInputOpActionsStruct extends ethereum.Tuple {
  get contractAddress(): Address {
    return this[0].toAddress();
  }

  get encodedFunction(): Bytes {
    return this[1].toBytes();
  }
}

export class Handler__handleOperationInputOpEncodedGasAssetStruct extends ethereum.Tuple {
  get encodedAssetAddr(): BigInt {
    return this[0].toBigInt();
  }

  get encodedAssetId(): BigInt {
    return this[1].toBigInt();
  }
}

export class Handler extends ethereum.SmartContract {
  static bind(address: Address): Handler {
    return new Handler("Handler", address);
  }

  ENTERED_EXECUTE_ACTIONS(): BigInt {
    let result = super.call(
      "ENTERED_EXECUTE_ACTIONS",
      "ENTERED_EXECUTE_ACTIONS():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_ENTERED_EXECUTE_ACTIONS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "ENTERED_EXECUTE_ACTIONS",
      "ENTERED_EXECUTE_ACTIONS():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  ENTERED_HANDLE_OPERATION(): BigInt {
    let result = super.call(
      "ENTERED_HANDLE_OPERATION",
      "ENTERED_HANDLE_OPERATION():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_ENTERED_HANDLE_OPERATION(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "ENTERED_HANDLE_OPERATION",
      "ENTERED_HANDLE_OPERATION():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  ERC20_APPROVE_SELECTOR(): Bytes {
    let result = super.call(
      "ERC20_APPROVE_SELECTOR",
      "ERC20_APPROVE_SELECTOR():(bytes4)",
      []
    );

    return result[0].toBytes();
  }

  try_ERC20_APPROVE_SELECTOR(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "ERC20_APPROVE_SELECTOR",
      "ERC20_APPROVE_SELECTOR():(bytes4)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  ERC_20_APPROVE_FN_DATA_LENGTH(): BigInt {
    let result = super.call(
      "ERC_20_APPROVE_FN_DATA_LENGTH",
      "ERC_20_APPROVE_FN_DATA_LENGTH():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_ERC_20_APPROVE_FN_DATA_LENGTH(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "ERC_20_APPROVE_FN_DATA_LENGTH",
      "ERC_20_APPROVE_FN_DATA_LENGTH():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  NOT_ENTERED(): BigInt {
    let result = super.call("NOT_ENTERED", "NOT_ENTERED():(uint256)", []);

    return result[0].toBigInt();
  }

  try_NOT_ENTERED(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("NOT_ENTERED", "NOT_ENTERED():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  _leftoverTokensHolder(): Address {
    let result = super.call(
      "_leftoverTokensHolder",
      "_leftoverTokensHolder():(address)",
      []
    );

    return result[0].toAddress();
  }

  try__leftoverTokensHolder(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "_leftoverTokensHolder",
      "_leftoverTokensHolder():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  _nullifierSet(param0: BigInt): boolean {
    let result = super.call("_nullifierSet", "_nullifierSet(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBoolean();
  }

  try__nullifierSet(param0: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "_nullifierSet",
      "_nullifierSet(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  _pastRoots(param0: BigInt): boolean {
    let result = super.call("_pastRoots", "_pastRoots(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBoolean();
  }

  try__pastRoots(param0: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("_pastRoots", "_pastRoots(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  _subtreeBatchFillers(param0: Address): boolean {
    let result = super.call(
      "_subtreeBatchFillers",
      "_subtreeBatchFillers(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try__subtreeBatchFillers(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "_subtreeBatchFillers",
      "_subtreeBatchFillers(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  _supportedContractMethods(param0: BigInt): boolean {
    let result = super.call(
      "_supportedContractMethods",
      "_supportedContractMethods(uint192):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBoolean();
  }

  try__supportedContractMethods(param0: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "_supportedContractMethods",
      "_supportedContractMethods(uint192):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  _supportedContracts(param0: Address): boolean {
    let result = super.call(
      "_supportedContracts",
      "_supportedContracts(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try__supportedContracts(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "_supportedContracts",
      "_supportedContracts(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  _teller(): Address {
    let result = super.call("_teller", "_teller():(address)", []);

    return result[0].toAddress();
  }

  try__teller(): ethereum.CallResult<Address> {
    let result = super.tryCall("_teller", "_teller():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  count(): BigInt {
    let result = super.call("count", "count():(uint256)", []);

    return result[0].toBigInt();
  }

  try_count(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("count", "count():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  executeActions(
    op: Handler__executeActionsInputOpStruct
  ): Handler__executeActionsResult {
    let result = super.call(
      "executeActions",
      "executeActions((((uint256,uint256,uint256,uint256,uint256,uint256,uint256[8],(bytes,bytes),(bytes,bytes)),uint8,uint256)[],(uint256,uint256,uint256,uint256,uint256,uint256,uint256[8],(bytes,bytes),(bytes,bytes))[],(uint256,uint256),((uint256,uint256),uint256)[],(address,bytes)[],(uint256,uint256),uint256,uint256,uint256,uint256,bool)):(bool[],bytes[],uint256)",
      [ethereum.Value.fromTuple(op)]
    );

    return new Handler__executeActionsResult(
      result[0].toBooleanArray(),
      result[1].toBytesArray(),
      result[2].toBigInt()
    );
  }

  try_executeActions(
    op: Handler__executeActionsInputOpStruct
  ): ethereum.CallResult<Handler__executeActionsResult> {
    let result = super.tryCall(
      "executeActions",
      "executeActions((((uint256,uint256,uint256,uint256,uint256,uint256,uint256[8],(bytes,bytes),(bytes,bytes)),uint8,uint256)[],(uint256,uint256,uint256,uint256,uint256,uint256,uint256[8],(bytes,bytes),(bytes,bytes))[],(uint256,uint256),((uint256,uint256),uint256)[],(address,bytes)[],(uint256,uint256),uint256,uint256,uint256,uint256,bool)):(bool[],bytes[],uint256)",
      [ethereum.Value.fromTuple(op)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Handler__executeActionsResult(
        value[0].toBooleanArray(),
        value[1].toBytesArray(),
        value[2].toBigInt()
      )
    );
  }

  handleDeposit(deposit: Handler__handleDepositInputDepositStruct): BigInt {
    let result = super.call(
      "handleDeposit",
      "handleDeposit((address,(uint256,uint256),uint256,(uint256,uint256))):(uint128)",
      [ethereum.Value.fromTuple(deposit)]
    );

    return result[0].toBigInt();
  }

  try_handleDeposit(
    deposit: Handler__handleDepositInputDepositStruct
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "handleDeposit",
      "handleDeposit((address,(uint256,uint256),uint256,(uint256,uint256))):(uint128)",
      [ethereum.Value.fromTuple(deposit)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  handleOperation(
    op: Handler__handleOperationInputOpStruct,
    perJoinSplitVerifyGas: BigInt,
    bundler: Address
  ): Handler__handleOperationResultOpResultStruct {
    let result = super.call(
      "handleOperation",
      "handleOperation((((uint256,uint256,uint256,uint256,uint256,uint256,uint256[8],(bytes,bytes),(bytes,bytes)),uint8,uint256)[],(uint256,uint256,uint256,uint256,uint256,uint256,uint256[8],(bytes,bytes),(bytes,bytes))[],(uint256,uint256),((uint256,uint256),uint256)[],(address,bytes)[],(uint256,uint256),uint256,uint256,uint256,uint256,bool),uint256,address):((bool,bool,string,bool[],bytes[],uint256,uint256,uint256,uint128,uint128))",
      [
        ethereum.Value.fromTuple(op),
        ethereum.Value.fromUnsignedBigInt(perJoinSplitVerifyGas),
        ethereum.Value.fromAddress(bundler)
      ]
    );

    return changetype<Handler__handleOperationResultOpResultStruct>(
      result[0].toTuple()
    );
  }

  try_handleOperation(
    op: Handler__handleOperationInputOpStruct,
    perJoinSplitVerifyGas: BigInt,
    bundler: Address
  ): ethereum.CallResult<Handler__handleOperationResultOpResultStruct> {
    let result = super.tryCall(
      "handleOperation",
      "handleOperation((((uint256,uint256,uint256,uint256,uint256,uint256,uint256[8],(bytes,bytes),(bytes,bytes)),uint8,uint256)[],(uint256,uint256,uint256,uint256,uint256,uint256,uint256[8],(bytes,bytes),(bytes,bytes))[],(uint256,uint256),((uint256,uint256),uint256)[],(address,bytes)[],(uint256,uint256),uint256,uint256,uint256,uint256,bool),uint256,address):((bool,bool,string,bool[],bytes[],uint256,uint256,uint256,uint128,uint128))",
      [
        ethereum.Value.fromTuple(op),
        ethereum.Value.fromUnsignedBigInt(perJoinSplitVerifyGas),
        ethereum.Value.fromAddress(bundler)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Handler__handleOperationResultOpResultStruct>(
        value[0].toTuple()
      )
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  pendingOwner(): Address {
    let result = super.call("pendingOwner", "pendingOwner():(address)", []);

    return result[0].toAddress();
  }

  try_pendingOwner(): ethereum.CallResult<Address> {
    let result = super.tryCall("pendingOwner", "pendingOwner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  reentrancyGuardStage(): BigInt {
    let result = super.call(
      "reentrancyGuardStage",
      "reentrancyGuardStage():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_reentrancyGuardStage(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "reentrancyGuardStage",
      "reentrancyGuardStage():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  root(): BigInt {
    let result = super.call("root", "root():(uint256)", []);

    return result[0].toBigInt();
  }

  try_root(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("root", "root():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalCount(): BigInt {
    let result = super.call("totalCount", "totalCount():(uint128)", []);

    return result[0].toBigInt();
  }

  try_totalCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalCount", "totalCount():(uint128)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class AcceptOwnershipCall extends ethereum.Call {
  get inputs(): AcceptOwnershipCall__Inputs {
    return new AcceptOwnershipCall__Inputs(this);
  }

  get outputs(): AcceptOwnershipCall__Outputs {
    return new AcceptOwnershipCall__Outputs(this);
  }
}

export class AcceptOwnershipCall__Inputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall__Outputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class ApplySubtreeUpdateCall extends ethereum.Call {
  get inputs(): ApplySubtreeUpdateCall__Inputs {
    return new ApplySubtreeUpdateCall__Inputs(this);
  }

  get outputs(): ApplySubtreeUpdateCall__Outputs {
    return new ApplySubtreeUpdateCall__Outputs(this);
  }
}

export class ApplySubtreeUpdateCall__Inputs {
  _call: ApplySubtreeUpdateCall;

  constructor(call: ApplySubtreeUpdateCall) {
    this._call = call;
  }

  get newRoot(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get proof(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class ApplySubtreeUpdateCall__Outputs {
  _call: ApplySubtreeUpdateCall;

  constructor(call: ApplySubtreeUpdateCall) {
    this._call = call;
  }
}

export class ExecuteActionsCall extends ethereum.Call {
  get inputs(): ExecuteActionsCall__Inputs {
    return new ExecuteActionsCall__Inputs(this);
  }

  get outputs(): ExecuteActionsCall__Outputs {
    return new ExecuteActionsCall__Outputs(this);
  }
}

export class ExecuteActionsCall__Inputs {
  _call: ExecuteActionsCall;

  constructor(call: ExecuteActionsCall) {
    this._call = call;
  }

  get op(): ExecuteActionsCallOpStruct {
    return changetype<ExecuteActionsCallOpStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class ExecuteActionsCall__Outputs {
  _call: ExecuteActionsCall;

  constructor(call: ExecuteActionsCall) {
    this._call = call;
  }

  get successes(): Array<boolean> {
    return this._call.outputValues[0].value.toBooleanArray();
  }

  get results(): Array<Bytes> {
    return this._call.outputValues[1].value.toBytesArray();
  }

  get numRefundsToHandle(): BigInt {
    return this._call.outputValues[2].value.toBigInt();
  }
}

export class ExecuteActionsCallOpStruct extends ethereum.Tuple {
  get pubJoinSplits(): Array<ExecuteActionsCallOpPubJoinSplitsStruct> {
    return this[0].toTupleArray<ExecuteActionsCallOpPubJoinSplitsStruct>();
  }

  get confJoinSplits(): Array<ExecuteActionsCallOpConfJoinSplitsStruct> {
    return this[1].toTupleArray<ExecuteActionsCallOpConfJoinSplitsStruct>();
  }

  get refundAddr(): ExecuteActionsCallOpRefundAddrStruct {
    return changetype<ExecuteActionsCallOpRefundAddrStruct>(this[2].toTuple());
  }

  get trackedAssets(): Array<ExecuteActionsCallOpTrackedAssetsStruct> {
    return this[3].toTupleArray<ExecuteActionsCallOpTrackedAssetsStruct>();
  }

  get actions(): Array<ExecuteActionsCallOpActionsStruct> {
    return this[4].toTupleArray<ExecuteActionsCallOpActionsStruct>();
  }

  get encodedGasAsset(): ExecuteActionsCallOpEncodedGasAssetStruct {
    return changetype<ExecuteActionsCallOpEncodedGasAssetStruct>(
      this[5].toTuple()
    );
  }

  get gasAssetRefundThreshold(): BigInt {
    return this[6].toBigInt();
  }

  get executionGasLimit(): BigInt {
    return this[7].toBigInt();
  }

  get gasPrice(): BigInt {
    return this[8].toBigInt();
  }

  get deadline(): BigInt {
    return this[9].toBigInt();
  }

  get atomicActions(): boolean {
    return this[10].toBoolean();
  }
}

export class ExecuteActionsCallOpPubJoinSplitsStruct extends ethereum.Tuple {
  get joinSplit(): ExecuteActionsCallOpPubJoinSplitsJoinSplitStruct {
    return changetype<ExecuteActionsCallOpPubJoinSplitsJoinSplitStruct>(
      this[0].toTuple()
    );
  }

  get assetIndex(): i32 {
    return this[1].toI32();
  }

  get publicSpend(): BigInt {
    return this[2].toBigInt();
  }
}

export class ExecuteActionsCallOpPubJoinSplitsJoinSplitStruct extends ethereum.Tuple {
  get commitmentTreeRoot(): BigInt {
    return this[0].toBigInt();
  }

  get nullifierA(): BigInt {
    return this[1].toBigInt();
  }

  get nullifierB(): BigInt {
    return this[2].toBigInt();
  }

  get newNoteACommitment(): BigInt {
    return this[3].toBigInt();
  }

  get newNoteBCommitment(): BigInt {
    return this[4].toBigInt();
  }

  get senderCommitment(): BigInt {
    return this[5].toBigInt();
  }

  get proof(): Array<BigInt> {
    return this[6].toBigIntArray();
  }

  get newNoteAEncrypted(): ExecuteActionsCallOpPubJoinSplitsJoinSplitNewNoteAEncryptedStruct {
    return changetype<
      ExecuteActionsCallOpPubJoinSplitsJoinSplitNewNoteAEncryptedStruct
    >(this[7].toTuple());
  }

  get newNoteBEncrypted(): ExecuteActionsCallOpPubJoinSplitsJoinSplitNewNoteBEncryptedStruct {
    return changetype<
      ExecuteActionsCallOpPubJoinSplitsJoinSplitNewNoteBEncryptedStruct
    >(this[8].toTuple());
  }
}

export class ExecuteActionsCallOpPubJoinSplitsJoinSplitNewNoteAEncryptedStruct extends ethereum.Tuple {
  get ciphertextBytes(): Bytes {
    return this[0].toBytes();
  }

  get encapsulatedSecretBytes(): Bytes {
    return this[1].toBytes();
  }
}

export class ExecuteActionsCallOpPubJoinSplitsJoinSplitNewNoteBEncryptedStruct extends ethereum.Tuple {
  get ciphertextBytes(): Bytes {
    return this[0].toBytes();
  }

  get encapsulatedSecretBytes(): Bytes {
    return this[1].toBytes();
  }
}

export class ExecuteActionsCallOpConfJoinSplitsStruct extends ethereum.Tuple {
  get commitmentTreeRoot(): BigInt {
    return this[0].toBigInt();
  }

  get nullifierA(): BigInt {
    return this[1].toBigInt();
  }

  get nullifierB(): BigInt {
    return this[2].toBigInt();
  }

  get newNoteACommitment(): BigInt {
    return this[3].toBigInt();
  }

  get newNoteBCommitment(): BigInt {
    return this[4].toBigInt();
  }

  get senderCommitment(): BigInt {
    return this[5].toBigInt();
  }

  get proof(): Array<BigInt> {
    return this[6].toBigIntArray();
  }

  get newNoteAEncrypted(): ExecuteActionsCallOpConfJoinSplitsNewNoteAEncryptedStruct {
    return changetype<
      ExecuteActionsCallOpConfJoinSplitsNewNoteAEncryptedStruct
    >(this[7].toTuple());
  }

  get newNoteBEncrypted(): ExecuteActionsCallOpConfJoinSplitsNewNoteBEncryptedStruct {
    return changetype<
      ExecuteActionsCallOpConfJoinSplitsNewNoteBEncryptedStruct
    >(this[8].toTuple());
  }
}

export class ExecuteActionsCallOpConfJoinSplitsNewNoteAEncryptedStruct extends ethereum.Tuple {
  get ciphertextBytes(): Bytes {
    return this[0].toBytes();
  }

  get encapsulatedSecretBytes(): Bytes {
    return this[1].toBytes();
  }
}

export class ExecuteActionsCallOpConfJoinSplitsNewNoteBEncryptedStruct extends ethereum.Tuple {
  get ciphertextBytes(): Bytes {
    return this[0].toBytes();
  }

  get encapsulatedSecretBytes(): Bytes {
    return this[1].toBytes();
  }
}

export class ExecuteActionsCallOpRefundAddrStruct extends ethereum.Tuple {
  get h1(): BigInt {
    return this[0].toBigInt();
  }

  get h2(): BigInt {
    return this[1].toBigInt();
  }
}

export class ExecuteActionsCallOpTrackedAssetsStruct extends ethereum.Tuple {
  get encodedAsset(): ExecuteActionsCallOpTrackedAssetsEncodedAssetStruct {
    return changetype<ExecuteActionsCallOpTrackedAssetsEncodedAssetStruct>(
      this[0].toTuple()
    );
  }

  get minRefundValue(): BigInt {
    return this[1].toBigInt();
  }
}

export class ExecuteActionsCallOpTrackedAssetsEncodedAssetStruct extends ethereum.Tuple {
  get encodedAssetAddr(): BigInt {
    return this[0].toBigInt();
  }

  get encodedAssetId(): BigInt {
    return this[1].toBigInt();
  }
}

export class ExecuteActionsCallOpActionsStruct extends ethereum.Tuple {
  get contractAddress(): Address {
    return this[0].toAddress();
  }

  get encodedFunction(): Bytes {
    return this[1].toBytes();
  }
}

export class ExecuteActionsCallOpEncodedGasAssetStruct extends ethereum.Tuple {
  get encodedAssetAddr(): BigInt {
    return this[0].toBigInt();
  }

  get encodedAssetId(): BigInt {
    return this[1].toBigInt();
  }
}

export class FillBatchWithZerosCall extends ethereum.Call {
  get inputs(): FillBatchWithZerosCall__Inputs {
    return new FillBatchWithZerosCall__Inputs(this);
  }

  get outputs(): FillBatchWithZerosCall__Outputs {
    return new FillBatchWithZerosCall__Outputs(this);
  }
}

export class FillBatchWithZerosCall__Inputs {
  _call: FillBatchWithZerosCall;

  constructor(call: FillBatchWithZerosCall) {
    this._call = call;
  }
}

export class FillBatchWithZerosCall__Outputs {
  _call: FillBatchWithZerosCall;

  constructor(call: FillBatchWithZerosCall) {
    this._call = call;
  }
}

export class HandleDepositCall extends ethereum.Call {
  get inputs(): HandleDepositCall__Inputs {
    return new HandleDepositCall__Inputs(this);
  }

  get outputs(): HandleDepositCall__Outputs {
    return new HandleDepositCall__Outputs(this);
  }
}

export class HandleDepositCall__Inputs {
  _call: HandleDepositCall;

  constructor(call: HandleDepositCall) {
    this._call = call;
  }

  get deposit(): HandleDepositCallDepositStruct {
    return changetype<HandleDepositCallDepositStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class HandleDepositCall__Outputs {
  _call: HandleDepositCall;

  constructor(call: HandleDepositCall) {
    this._call = call;
  }

  get merkleIndex(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class HandleDepositCallDepositStruct extends ethereum.Tuple {
  get spender(): Address {
    return this[0].toAddress();
  }

  get encodedAsset(): HandleDepositCallDepositEncodedAssetStruct {
    return changetype<HandleDepositCallDepositEncodedAssetStruct>(
      this[1].toTuple()
    );
  }

  get value(): BigInt {
    return this[2].toBigInt();
  }

  get depositAddr(): HandleDepositCallDepositDepositAddrStruct {
    return changetype<HandleDepositCallDepositDepositAddrStruct>(
      this[3].toTuple()
    );
  }
}

export class HandleDepositCallDepositEncodedAssetStruct extends ethereum.Tuple {
  get encodedAssetAddr(): BigInt {
    return this[0].toBigInt();
  }

  get encodedAssetId(): BigInt {
    return this[1].toBigInt();
  }
}

export class HandleDepositCallDepositDepositAddrStruct extends ethereum.Tuple {
  get h1(): BigInt {
    return this[0].toBigInt();
  }

  get h2(): BigInt {
    return this[1].toBigInt();
  }
}

export class HandleOperationCall extends ethereum.Call {
  get inputs(): HandleOperationCall__Inputs {
    return new HandleOperationCall__Inputs(this);
  }

  get outputs(): HandleOperationCall__Outputs {
    return new HandleOperationCall__Outputs(this);
  }
}

export class HandleOperationCall__Inputs {
  _call: HandleOperationCall;

  constructor(call: HandleOperationCall) {
    this._call = call;
  }

  get op(): HandleOperationCallOpStruct {
    return changetype<HandleOperationCallOpStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get perJoinSplitVerifyGas(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get bundler(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class HandleOperationCall__Outputs {
  _call: HandleOperationCall;

  constructor(call: HandleOperationCall) {
    this._call = call;
  }

  get opResult(): HandleOperationCallOpResultStruct {
    return changetype<HandleOperationCallOpResultStruct>(
      this._call.outputValues[0].value.toTuple()
    );
  }
}

export class HandleOperationCallOpStruct extends ethereum.Tuple {
  get pubJoinSplits(): Array<HandleOperationCallOpPubJoinSplitsStruct> {
    return this[0].toTupleArray<HandleOperationCallOpPubJoinSplitsStruct>();
  }

  get confJoinSplits(): Array<HandleOperationCallOpConfJoinSplitsStruct> {
    return this[1].toTupleArray<HandleOperationCallOpConfJoinSplitsStruct>();
  }

  get refundAddr(): HandleOperationCallOpRefundAddrStruct {
    return changetype<HandleOperationCallOpRefundAddrStruct>(this[2].toTuple());
  }

  get trackedAssets(): Array<HandleOperationCallOpTrackedAssetsStruct> {
    return this[3].toTupleArray<HandleOperationCallOpTrackedAssetsStruct>();
  }

  get actions(): Array<HandleOperationCallOpActionsStruct> {
    return this[4].toTupleArray<HandleOperationCallOpActionsStruct>();
  }

  get encodedGasAsset(): HandleOperationCallOpEncodedGasAssetStruct {
    return changetype<HandleOperationCallOpEncodedGasAssetStruct>(
      this[5].toTuple()
    );
  }

  get gasAssetRefundThreshold(): BigInt {
    return this[6].toBigInt();
  }

  get executionGasLimit(): BigInt {
    return this[7].toBigInt();
  }

  get gasPrice(): BigInt {
    return this[8].toBigInt();
  }

  get deadline(): BigInt {
    return this[9].toBigInt();
  }

  get atomicActions(): boolean {
    return this[10].toBoolean();
  }
}

export class HandleOperationCallOpPubJoinSplitsStruct extends ethereum.Tuple {
  get joinSplit(): HandleOperationCallOpPubJoinSplitsJoinSplitStruct {
    return changetype<HandleOperationCallOpPubJoinSplitsJoinSplitStruct>(
      this[0].toTuple()
    );
  }

  get assetIndex(): i32 {
    return this[1].toI32();
  }

  get publicSpend(): BigInt {
    return this[2].toBigInt();
  }
}

export class HandleOperationCallOpPubJoinSplitsJoinSplitStruct extends ethereum.Tuple {
  get commitmentTreeRoot(): BigInt {
    return this[0].toBigInt();
  }

  get nullifierA(): BigInt {
    return this[1].toBigInt();
  }

  get nullifierB(): BigInt {
    return this[2].toBigInt();
  }

  get newNoteACommitment(): BigInt {
    return this[3].toBigInt();
  }

  get newNoteBCommitment(): BigInt {
    return this[4].toBigInt();
  }

  get senderCommitment(): BigInt {
    return this[5].toBigInt();
  }

  get proof(): Array<BigInt> {
    return this[6].toBigIntArray();
  }

  get newNoteAEncrypted(): HandleOperationCallOpPubJoinSplitsJoinSplitNewNoteAEncryptedStruct {
    return changetype<
      HandleOperationCallOpPubJoinSplitsJoinSplitNewNoteAEncryptedStruct
    >(this[7].toTuple());
  }

  get newNoteBEncrypted(): HandleOperationCallOpPubJoinSplitsJoinSplitNewNoteBEncryptedStruct {
    return changetype<
      HandleOperationCallOpPubJoinSplitsJoinSplitNewNoteBEncryptedStruct
    >(this[8].toTuple());
  }
}

export class HandleOperationCallOpPubJoinSplitsJoinSplitNewNoteAEncryptedStruct extends ethereum.Tuple {
  get ciphertextBytes(): Bytes {
    return this[0].toBytes();
  }

  get encapsulatedSecretBytes(): Bytes {
    return this[1].toBytes();
  }
}

export class HandleOperationCallOpPubJoinSplitsJoinSplitNewNoteBEncryptedStruct extends ethereum.Tuple {
  get ciphertextBytes(): Bytes {
    return this[0].toBytes();
  }

  get encapsulatedSecretBytes(): Bytes {
    return this[1].toBytes();
  }
}

export class HandleOperationCallOpConfJoinSplitsStruct extends ethereum.Tuple {
  get commitmentTreeRoot(): BigInt {
    return this[0].toBigInt();
  }

  get nullifierA(): BigInt {
    return this[1].toBigInt();
  }

  get nullifierB(): BigInt {
    return this[2].toBigInt();
  }

  get newNoteACommitment(): BigInt {
    return this[3].toBigInt();
  }

  get newNoteBCommitment(): BigInt {
    return this[4].toBigInt();
  }

  get senderCommitment(): BigInt {
    return this[5].toBigInt();
  }

  get proof(): Array<BigInt> {
    return this[6].toBigIntArray();
  }

  get newNoteAEncrypted(): HandleOperationCallOpConfJoinSplitsNewNoteAEncryptedStruct {
    return changetype<
      HandleOperationCallOpConfJoinSplitsNewNoteAEncryptedStruct
    >(this[7].toTuple());
  }

  get newNoteBEncrypted(): HandleOperationCallOpConfJoinSplitsNewNoteBEncryptedStruct {
    return changetype<
      HandleOperationCallOpConfJoinSplitsNewNoteBEncryptedStruct
    >(this[8].toTuple());
  }
}

export class HandleOperationCallOpConfJoinSplitsNewNoteAEncryptedStruct extends ethereum.Tuple {
  get ciphertextBytes(): Bytes {
    return this[0].toBytes();
  }

  get encapsulatedSecretBytes(): Bytes {
    return this[1].toBytes();
  }
}

export class HandleOperationCallOpConfJoinSplitsNewNoteBEncryptedStruct extends ethereum.Tuple {
  get ciphertextBytes(): Bytes {
    return this[0].toBytes();
  }

  get encapsulatedSecretBytes(): Bytes {
    return this[1].toBytes();
  }
}

export class HandleOperationCallOpRefundAddrStruct extends ethereum.Tuple {
  get h1(): BigInt {
    return this[0].toBigInt();
  }

  get h2(): BigInt {
    return this[1].toBigInt();
  }
}

export class HandleOperationCallOpTrackedAssetsStruct extends ethereum.Tuple {
  get encodedAsset(): HandleOperationCallOpTrackedAssetsEncodedAssetStruct {
    return changetype<HandleOperationCallOpTrackedAssetsEncodedAssetStruct>(
      this[0].toTuple()
    );
  }

  get minRefundValue(): BigInt {
    return this[1].toBigInt();
  }
}

export class HandleOperationCallOpTrackedAssetsEncodedAssetStruct extends ethereum.Tuple {
  get encodedAssetAddr(): BigInt {
    return this[0].toBigInt();
  }

  get encodedAssetId(): BigInt {
    return this[1].toBigInt();
  }
}

export class HandleOperationCallOpActionsStruct extends ethereum.Tuple {
  get contractAddress(): Address {
    return this[0].toAddress();
  }

  get encodedFunction(): Bytes {
    return this[1].toBytes();
  }
}

export class HandleOperationCallOpEncodedGasAssetStruct extends ethereum.Tuple {
  get encodedAssetAddr(): BigInt {
    return this[0].toBigInt();
  }

  get encodedAssetId(): BigInt {
    return this[1].toBigInt();
  }
}

export class HandleOperationCallOpResultStruct extends ethereum.Tuple {
  get opProcessed(): boolean {
    return this[0].toBoolean();
  }

  get assetsUnwrapped(): boolean {
    return this[1].toBoolean();
  }

  get failureReason(): string {
    return this[2].toString();
  }

  get callSuccesses(): Array<boolean> {
    return this[3].toBooleanArray();
  }

  get callResults(): Array<Bytes> {
    return this[4].toBytesArray();
  }

  get verificationGas(): BigInt {
    return this[5].toBigInt();
  }

  get executionGas(): BigInt {
    return this[6].toBigInt();
  }

  get numRefunds(): BigInt {
    return this[7].toBigInt();
  }

  get preOpMerkleCount(): BigInt {
    return this[8].toBigInt();
  }

  get postOpMerkleCount(): BigInt {
    return this[9].toBigInt();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get subtreeUpdateVerifier(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get leftoverTokensHolder(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetContractMethodPermissionCall extends ethereum.Call {
  get inputs(): SetContractMethodPermissionCall__Inputs {
    return new SetContractMethodPermissionCall__Inputs(this);
  }

  get outputs(): SetContractMethodPermissionCall__Outputs {
    return new SetContractMethodPermissionCall__Outputs(this);
  }
}

export class SetContractMethodPermissionCall__Inputs {
  _call: SetContractMethodPermissionCall;

  constructor(call: SetContractMethodPermissionCall) {
    this._call = call;
  }

  get contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get selector(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get permission(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class SetContractMethodPermissionCall__Outputs {
  _call: SetContractMethodPermissionCall;

  constructor(call: SetContractMethodPermissionCall) {
    this._call = call;
  }
}

export class SetContractPermissionCall extends ethereum.Call {
  get inputs(): SetContractPermissionCall__Inputs {
    return new SetContractPermissionCall__Inputs(this);
  }

  get outputs(): SetContractPermissionCall__Outputs {
    return new SetContractPermissionCall__Outputs(this);
  }
}

export class SetContractPermissionCall__Inputs {
  _call: SetContractPermissionCall;

  constructor(call: SetContractPermissionCall) {
    this._call = call;
  }

  get contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get permission(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetContractPermissionCall__Outputs {
  _call: SetContractPermissionCall;

  constructor(call: SetContractPermissionCall) {
    this._call = call;
  }
}

export class SetSubtreeBatchFillerPermissionCall extends ethereum.Call {
  get inputs(): SetSubtreeBatchFillerPermissionCall__Inputs {
    return new SetSubtreeBatchFillerPermissionCall__Inputs(this);
  }

  get outputs(): SetSubtreeBatchFillerPermissionCall__Outputs {
    return new SetSubtreeBatchFillerPermissionCall__Outputs(this);
  }
}

export class SetSubtreeBatchFillerPermissionCall__Inputs {
  _call: SetSubtreeBatchFillerPermissionCall;

  constructor(call: SetSubtreeBatchFillerPermissionCall) {
    this._call = call;
  }

  get filler(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get permission(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetSubtreeBatchFillerPermissionCall__Outputs {
  _call: SetSubtreeBatchFillerPermissionCall;

  constructor(call: SetSubtreeBatchFillerPermissionCall) {
    this._call = call;
  }
}

export class SetTellerCall extends ethereum.Call {
  get inputs(): SetTellerCall__Inputs {
    return new SetTellerCall__Inputs(this);
  }

  get outputs(): SetTellerCall__Outputs {
    return new SetTellerCall__Outputs(this);
  }
}

export class SetTellerCall__Inputs {
  _call: SetTellerCall;

  constructor(call: SetTellerCall) {
    this._call = call;
  }

  get teller(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTellerCall__Outputs {
  _call: SetTellerCall;

  constructor(call: SetTellerCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}
