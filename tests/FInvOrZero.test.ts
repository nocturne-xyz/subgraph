
import { BigInt } from "@graphprotocol/graph-ts";
import { describe, test, assert } from "matchstick-as/assembly/index"
import { FInvOrZero } from "../src/BN254ScalarField";

const TEST_VECTORS_INPUTS = [
  BigInt.fromString('1346105400976675952894639578811524117553817178260910704955916241091397257209'),
  BigInt.fromString('7995677822243679062883676559133694909511320136126667123464181310954258516026'),
  BigInt.fromString('21552843928571014306830361331804776049846265109378990450242632347812638912768'),
  BigInt.fromString('16661359812648243699046458779944755244643327947477021988708845869924298958740'),
  BigInt.fromString('14318591287263791355079688794435630830167715080861165887909832597601826522411'),
  BigInt.fromString('12677616211468528026583891356919455738730136712609931397289102041511289825719'),
  BigInt.fromString('20263852658463585829991333647257309766560403580242746130757278484584465408216'),
  BigInt.fromString('8263645839100531714946836909586629545671724472650192860901024723237577045093'),
  BigInt.fromString('17979293126388888238858476465292103869989348443097123854123136344124627573335'),
  BigInt.fromString('3242396300831666684351362671905941370120232458868670415800802081214825080862'),
  BigInt.fromString('21729568011285628314975484985952278925926545317787284552873787109877090239454'),
  BigInt.fromString('19917445884110341156884042218295038120417890898558142482476005286276520777352'),
  BigInt.fromString('16099758522016650645208592296762892001874615641969901425425907407832570000011'),
  BigInt.fromString('17619922207884369293375425358321248525031162044842946498353172611148220770163'),
  BigInt.fromString('2924940961444412217798559633802277192285118477499055836818952390157315480207'),
  BigInt.fromString('18654176484512945864393663615574285253078247637797997562520525308253026482157'),
  BigInt.fromString('13951047570397175030279208594122481932550457954248939709369699036911408783015'),
  BigInt.fromString('20980197993062424815133496322064906136801127037764496099466450479879218003707'),
  BigInt.fromString('16725315950100169452618161170480064632839540099079296647088882286201859993455'),
  BigInt.fromString('7560130463559380462817499562551896654530672162128921006985162592580500336131'),
  BigInt.fromString('2132887956986384342768304535498098072144935233429295874067541005872353787340'),
  BigInt.fromString('4193628463265975929297747138418292041166392715804185450845918108933352286721'),
  BigInt.fromString('19493776151831460586163037879949830723298484372937735720631018649014182891058'),
  BigInt.fromString('7983986600912246780839998325730911326244107191270499413106329078750866647681'),
  BigInt.fromString('4921480000548244498054512282232191525199567118271230310088413170267229007907'),
  BigInt.fromString('17510861393286775601732677344034270394411058392550695137046566268601207644684'),
  BigInt.fromString('14635971581945761872644040060563106749808713378960519493484449392015722617401'),
  BigInt.fromString('283539641928216219738123249313712058967779098423475274169345830281542585468'),
  BigInt.fromString('13008531203898944724375755365891147020133959965392364473713185908183492356230'),
  BigInt.fromString('11846691174592774986317754013116395824702437912836914180427146741443386885786')
]

const TEST_VECTORS_OUTPUTS = [
  BigInt.fromString('21103243515607866765893134338876897999365154830666936181605532393023678544784'),
  BigInt.fromString('19490909922388157655095836332491886624434579694677923974847222583259210549334'),
  BigInt.fromString('7479081114013559487164164271244796474380044685249797698446217315210757559793'),
  BigInt.fromString('5831812309639067380990115606312198604585533127016711400174648304960433521357'),
  BigInt.fromString('11297533212793669791432172458957661345483500362413259395698680963101938297738'),
  BigInt.fromString('21491746465237523590512354488443639256679357872154419685764320668202906478292'),
  BigInt.fromString('5839151488070343808311293019570753731075058313965568476962828819769544480167'),
  BigInt.fromString('11440722578605120080362834410196798187162472287909740032910634952402741913442'),
  BigInt.fromString('2096717044134020446745484729513996988100592685465971707085367941887864366177'),
  BigInt.fromString('4701764581944908359104276983525766610881446124008210804367478279467682344087'),
  BigInt.fromString('8527281231085096806520800114952448124139305664600315248361256661948198109771'),
  BigInt.fromString('13989749041316905444146280623639009620738293555230775351324967975779718468639'),
  BigInt.fromString('17251237217248466764059437592665029920186166077030592302606461996598046426157'),
  BigInt.fromString('13722661126696379778578667735080180813774175700126391207395022830421001225216'),
  BigInt.fromString('14337412702862792989241499036788464319739562849335992695304333224813173100162'),
  BigInt.fromString('5590567048283763422219288539624476202428899510952348982206098507503045497126'),
  BigInt.fromString('7642015200713858861515491085314439201119118090879930619256379447975568197801'),
  BigInt.fromString('15504446214665240803730743041160097637764590745376433229813804193000897027042'),
  BigInt.fromString('10535650969903944726636974837893459123740101350011410002900033034016381641819'),
  BigInt.fromString('18445454078247459088751700638830306448959261219567186684924237442338852098733'),
  BigInt.fromString('12666858940567240743213904677138913352423980531160617327236367723232396975689'),
  BigInt.fromString('18475528741605747096741528649452675809761593859890439416296376794708178733999'),
  BigInt.fromString('10517775546447049855921503511120019233837661268297721738277610626004553707427'),
  BigInt.fromString('3631330849574782320920273100019100473547401198536719030737527171925166340615'),
  BigInt.fromString('12872836165928787075891098572724621625031717485049880868235109373641982319673'),
  BigInt.fromString('2891495788203862929703335414240272850218688706316674164710070942226447308771'),
  BigInt.fromString('12154188061644990417205219626075331743306683158990297655775947656844687186276'),
  BigInt.fromString('15592473227932571953397556852140236879303386353449067740975880433930071150430'),
  BigInt.fromString('10982412874747860238248382477475093981696532879811653421417227862907119703983'),
  BigInt.fromString('16399186622977714497990674254612770558020361501926382436462437604299811297026')
]

describe("invOrZero", () => {
  test("matches crypto-utils test cases", () => {
    for (let i = 0; i < TEST_VECTORS_INPUTS.length; i++) {
      const input = TEST_VECTORS_INPUTS[i];
      const expected = TEST_VECTORS_OUTPUTS[i];
      const actual = FInvOrZero(input);
      assert.bigIntEquals(expected, actual);
    }
  });
});
