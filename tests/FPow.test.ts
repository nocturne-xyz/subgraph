
import { describe, test, assert } from "matchstick-as/assembly/index"
import { BigInt } from "@graphprotocol/graph-ts";
import { FPow } from "../src/BN254ScalarField";

const TEST_VECTORS_INPUTS = [
  [BigInt.fromString('2602293979886040415006572384588117224128244393730916513410789430605342671547'), BigInt.fromString('13718067791421963700644610327846596254359069020959634068726002191169315560307')],
  [BigInt.fromString('7359071069919875694114743449449961900658071205233588005061257956695967851954'), BigInt.fromString('3288365145005564965112908738833041241650239436019801995215428070750761929284')],
  [BigInt.fromString('7543609564083042918366501747517748025643808187206497699237285888565010017055'), BigInt.fromString('14300691006248650231856828408355266236950679127411699881788495849737252755224')],
  [BigInt.fromString('16839839154003956219206714010868916120957286456266824708360841269593088379886'), BigInt.fromString('12430688296575458391718241089504767062159908141796425348662308124944187217654')],
  [BigInt.fromString('4915384929562927340427096922913229866082098545760413980974726070345264370176'), BigInt.fromString('5970423055002644109728708597275547489291664136862405401671965551840339101628')],
  [BigInt.fromString('10335257563309829249487670358161417839161140717159688422338626797349213711556'), BigInt.fromString('20232938415497968831494838188761245858910758834176652860373401870663775581255')],
  [BigInt.fromString('13073451084838338984089778372147615591272890512865424264007688156650078842158'), BigInt.fromString('5394459200547551339545686640029285407031681207567640872680646122166840457259')],
  [BigInt.fromString('14319648532571203800235900959462666414037843528534019019233165645607577496686'), BigInt.fromString('597258387422502035068643521023588628540212757439137273798397629889572363480')],
  [BigInt.fromString('5877680471709458029073777260014074066453111793942463496998645407197640644013'), BigInt.fromString('2686200667873735342929780896728683918086061034927490971233916992666684186655')],
  [BigInt.fromString('2032754025693041780926494743737706719265643335050195880101435226146750748148'), BigInt.fromString('20858960907690693345396938105256406095171042708922480970708031056782985156353')],
  [BigInt.fromString('10420537178667726691187190518416055504493359377349384339475088890977258200425'), BigInt.fromString('5716928337280332243943794758662484059486082464310288944335767981880152386623')],
  [BigInt.fromString('3395808778002738195622349855614315449542308856429889880633280952821676880197'), BigInt.fromString('7385725815223248424858781448511661156522523278126529318443599999213856210178')],
  [BigInt.fromString('6940346541166184188362022843287313151921616727607960459550503409115617286550'), BigInt.fromString('9025748752979852386021810499294270103442678760154796893864743881461672216264')],
  [BigInt.fromString('5333604410497218696728349138357449158099477851762958443533318882481065457357'), BigInt.fromString('3731529408692973077670061272714113550317526695606498940042643918050651354942')],
  [BigInt.fromString('6043700637674764882512065875060840015261346490951638889761011467293572241610'), BigInt.fromString('7382807197614453342988008523275182085545301303191983813820572831288440328685')],
  [BigInt.fromString('5226148523920093344904426366723524737817405243959162577794092335887874704886'), BigInt.fromString('7265052006466538148053499057449974911482736012596249026356578655524842058469')],
  [BigInt.fromString('10512005044419700740832026812533891235700329403504471791987239298996161779836'), BigInt.fromString('17941759185057023875326840467981889409852463673340648292912351434928034121689')],
  [BigInt.fromString('5880402924046465695181149642669043137025370091333760739663331699979215468823'), BigInt.fromString('14403696699984989115435790873343098394656144959304760003235263645588960904265')],
  [BigInt.fromString('12158365402864133830104433063440432113594217580416709137086320561884612869327'), BigInt.fromString('12341895431988314995425315588154790288801942708138923125333483851587177818397')],
  [BigInt.fromString('6183874816307279437015611385489540352284103329002715999954576362085084772291'), BigInt.fromString('16324087698519889224087047630628839449604571513982268759027014182185220170652')],
  [BigInt.fromString('12162680793766768219823989343274482251884700360138164874270573025561085766678'), BigInt.fromString('12906572599301757216868326809225084104098306223292874587263281262832331848009')],
  [BigInt.fromString('21523230097013757336779854377763247502476077242958289874702685217105639950745'), BigInt.fromString('8997021810521395847078302818925134771306342040464609196389759293844974649024')],
  [BigInt.fromString('20252412000313344115167172409042081802450225534211913838243117369696645371667'), BigInt.fromString('15373074599254616669316790710428578540444141677723893480512356691744939092385')],
  [BigInt.fromString('12815060063497620073854742581278516378012365333213398274031036198649189506306'), BigInt.fromString('8059815473626454909916640081141650818127298321297837971660464598715912681779')],
  [BigInt.fromString('1071314487483916128599344578790011518066445156467249000727976875740216673583'), BigInt.fromString('10534198310946715397706472016747713651695829174664798204984433614128982888527')],
  [BigInt.fromString('18904021947963542897328217215356609144089422124906498898987976920369354641063'), BigInt.fromString('7182732450875399094396641123949187032133947855168891749314155575686432180157')],
  [BigInt.fromString('16301366986840617455434691320671600198542655864298971169985931868908507229168'), BigInt.fromString('15293136428011055554472525956176086591242055017621607138521703022449566201428')],
  [BigInt.fromString('11122084441080736572986236968312352203118681170469449164041512004491852357307'), BigInt.fromString('395445345929928355099212102410080184159423613930549765601208385474426644529')],
  [BigInt.fromString('10681451876585575191791323966068649811902727002478321719283459477063126171394'), BigInt.fromString('10119521587711064912450715246698433149552520326754782492829304421785686035668')],
  [BigInt.fromString('6954683970600983056280875999276726895543965641599333545284368795758957156838'), BigInt.fromString('4415976974627731434949974949469597435523725406017725150566378134513012260935')]
]

const TEST_VECTORS_OUTPUTS = [
  BigInt.fromString('10944288628043836820180620349006640371937415275865165228629912887793665868264'),
  BigInt.fromString('3849325134020758990392433518035534986891312117258554407565806253585150633984'),
  BigInt.fromString('14046378530410430753627149308909236091502807997002396341547879257958942028045'),
  BigInt.fromString('17958643648901265186082464943874507286581572683636222695976549435043411222228'),
  BigInt.fromString('1083962262065279901741709067765761901509441007845955064574279367159854271995'),
  BigInt.fromString('18316045774734184891475513371926445253759400901362464468335570691113270979489'),
  BigInt.fromString('3934827412063839136745163870207407929672009613320857391294950584591815730581'),
  BigInt.fromString('13691651878795521276011788854374425193035119845560221114736219306120659740750'),
  BigInt.fromString('8713757406607383488701841063539613284456179389924617457061802908052208870248'),
  BigInt.fromString('3209580001768351909332338087750177919551160060647647687407072801415079973638'),
  BigInt.fromString('21768504268191939581786620809156304660027792680417647612883116081287369444265'),
  BigInt.fromString('8418958346418987471358271428518186936123391408778555011916980544860818795198'),
  BigInt.fromString('10998726528533021679218464974954429249389451601011247822590284643155512811533'),
  BigInt.fromString('19419532423488202515951172366619699325125796010716607692122341566903111647463'),
  BigInt.fromString('15241325836652372309270087181563723537024908293628740619225491699222356956252'),
  BigInt.fromString('9276161469585645738803840982390225807967796407524686478117160575798599916495'),
  BigInt.fromString('19125825849227874246548256556824642410416576519180874668335675532605633350360'),
  BigInt.fromString('21183646222253091457095407013538674757515290044817966580346662244795658664633'),
  BigInt.fromString('10395829859775476192458129381127029859099133964758450469997198989524508783841'),
  BigInt.fromString('10920582437793676823180861232677911323337410332843635342314099470235160669294'),
  BigInt.fromString('2745951792312259091776825706485930013633512636392428945799839372531190439378'),
  BigInt.fromString('20338552195356565742098046285318526817693232105383280933282275930765259851263'),
  BigInt.fromString('20075776167622354858080411191746404404314385674597583571770750108680981130105'),
  BigInt.fromString('3951318160391729510435553323300802464436920243757960982146624296998501789138'),
  BigInt.fromString('18653483018746522432287064540618598238582482176006071440749823275936405964367'),
  BigInt.fromString('13395828759043815357714813438414021774521553770242483873368416946471577383833'),
  BigInt.fromString('21706681423544772180428953957162439155665750641450624569511123861707110549717'),
  BigInt.fromString('4243787433371895582759072252373176578513769600090173495413192867827679437424'),
  BigInt.fromString('19870889828062373855790142170929993800176723655564281104258584196980971655375'),
  BigInt.fromString('17099456477269864496164506934266118997780370296737489906275278118537989867878')
]

describe("pow", () => {
  test("matches crypto-utils test cases", () => {
    for (let i = 0; i < TEST_VECTORS_INPUTS.length; i++) {
      const inputs = TEST_VECTORS_INPUTS[i];
      const expected = TEST_VECTORS_OUTPUTS[i];
      const actual = FPow(inputs[0], inputs[1]);
      assert.bigIntEquals(expected, actual);
    }
  });
});
