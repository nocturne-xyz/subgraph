import { BigInt } from "@graphprotocol/graph-ts";
import { describe, test, assert } from "matchstick-as/assembly/index"
import { TREE_FRONTIER_ID, updateTreeFrontier } from "../src/tree";
import { TreeFrontier } from "../generated/schema";

const LEAVES = [
  BigInt.fromString("5907650229735801063730484507160770373388189572055152884253348226004965907047"),
  BigInt.fromString("18916848318364730020292352054437357109311967086575558434961121416632485583149"),
  BigInt.fromString("4474180081785138983593635264084558132489938213613995902024628049642897538842"),
  BigInt.fromString("265106967157302178753473680169143572641416958353290866983297085260385212166"),
  BigInt.fromString("8322693961259900403097233264841125918767478926609846322864196427202677529099"),
  BigInt.fromString("9891457101566885420666235809981814985313953494257888588797912119201885680243"),
  BigInt.fromString("10269185052454044113573188162437354806932432208902163998139084667552317097174"),
  BigInt.fromString("17327815742747849558739554833633732040158038585686891620484262509598162090679"),
  BigInt.fromString("437956211815835128330571317833725212528607737336797390970208046232148789277"),
  BigInt.fromString("17537148050430512438773042632168526583248280950837682284865765591176290322044") 
];

const EXPECTED_ROOT = BigInt.fromString("13808918748460489880489846487670993001005787998868766795413611474961974056305");


describe("updateTreeFrontier", () => {
  test("matches test case pulled from SDK", () => {
    updateTreeFrontier(LEAVES);

    const frontier = TreeFrontier.load(TREE_FRONTIER_ID);
    if (frontier === null) throw new Error("Frontier should not be null after updating");
    
    assert.bigIntEquals(EXPECTED_ROOT, frontier.root);
  })
})